package squidpony.editor;

import java.beans.PropertyVetoException;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import squidpony.data.DataMaster;

/**
 * The primary container frame for the editor.
 *
 * @author Eben Howard - http://squidpony.com - howard@squidpony.com
 */
public class EditorFrame extends javax.swing.JFrame {

    private DataMaster master = new DataMaster();
    private ArrayList<DataEditor> iframes = new ArrayList<>();
    private File file;

    public EditorFrame() {
        initComponents();
        workingProgressBar.setIndeterminate(true);
        workingProgressBar.setVisible(true);
        workingLabel.setText("Loading");
        workingLabel.setVisible(true);

        iframes.add(conditionBlueprintsIFrame);
        iframes.add(elementsIFrame);
        iframes.add(skillsIFrame);

        try {
            file = new File("./test.epi");
            master = DataMaster.loadFromFile(file);
        } catch (IOException ex) {
            Logger.getLogger(EditorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (DataEditor de : iframes) {
            de.setDataMaster(master);
            de.loadData();
        }

        workingProgressBar.setIndeterminate(false);
        workingProgressBar.setVisible(false);
        workingLabel.setText("Loaded!");
    }

    private void deIconify(JInternalFrame iframe) {
        try {
            if (iframe.isIcon()) {
                iframe.setIcon(false);
            }
            iframe.setSelected(true);
        } catch (PropertyVetoException ex) {
        }
        iframe.setVisible(true);
        iframe.moveToFront();
        iframe.requestFocusInWindow();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        conditionBlueprintsIFrame = new squidpony.editor.iframes.ConditionBlueprintIFrame();
        elementsIFrame = new squidpony.editor.iframes.ElementIFrame();
        skillsIFrame = new squidpony.editor.iframes.SkilIFrame();
        jPanel1 = new javax.swing.JPanel();
        workingLabel = new javax.swing.JLabel();
        workingProgressBar = new javax.swing.JProgressBar();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveAllMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        windowMenu = new javax.swing.JMenu();
        showConditionBlueprintsMenuItem = new javax.swing.JMenuItem();
        showElementsMenuItem = new javax.swing.JMenuItem();
        skillsMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Epigon Data Editor");

        desktop.setBackground(new java.awt.Color(204, 204, 204));

        conditionBlueprintsIFrame.setClosable(false);
        conditionBlueprintsIFrame.setVisible(false);
        conditionBlueprintsIFrame.setBounds(400, 160, 630, 460);
        desktop.add(conditionBlueprintsIFrame, javax.swing.JLayeredPane.DEFAULT_LAYER);
        conditionBlueprintsIFrame.pack();

        elementsIFrame.setClosable(false);
        elementsIFrame.setVisible(false);
        elementsIFrame.setBounds(20, 20, 300, 620);
        desktop.add(elementsIFrame, javax.swing.JLayeredPane.DEFAULT_LAYER);
        elementsIFrame.pack();

        skillsIFrame.setClosable(false);
        skillsIFrame.setVisible(false);
        skillsIFrame.setBounds(340, 50, 339, 535);
        desktop.add(skillsIFrame, javax.swing.JLayeredPane.DEFAULT_LAYER);

        workingLabel.setText("Working");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(workingLabel)
                .addGap(18, 18, 18)
                .addComponent(workingProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 1282, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(workingLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(workingProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileMenu.setText("File");

        saveAllMenuItem.setText("Save All");
        saveAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAllMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAllMenuItem);

        exitMenuItem.setText("Exit");
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");
        jMenuBar1.add(editMenu);

        windowMenu.setText("Window");

        showConditionBlueprintsMenuItem.setText("Condition Blueprints");
        showConditionBlueprintsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conditionBlueprintMenuActionPerformed(evt);
            }
        });
        windowMenu.add(showConditionBlueprintsMenuItem);

        showElementsMenuItem.setText("Elements");
        showElementsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showElementsMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(showElementsMenuItem);

        skillsMenuItem.setText("Skills");
        skillsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skillsMenuItemActionPerformed(evt);
            }
        });
        windowMenu.add(skillsMenuItem);

        jMenuBar1.add(windowMenu);

        helpMenu.setText("Help");
        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void conditionBlueprintMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conditionBlueprintMenuActionPerformed
        deIconify(conditionBlueprintsIFrame);
    }//GEN-LAST:event_conditionBlueprintMenuActionPerformed

    private void showElementsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showElementsMenuItemActionPerformed
        deIconify(elementsIFrame);
    }//GEN-LAST:event_showElementsMenuItemActionPerformed

    private void saveAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAllMenuItemActionPerformed
        workingLabel.setText("Saving");
        workingLabel.setVisible(true);
        workingProgressBar.setIndeterminate(true);
        workingProgressBar.setVisible(true);
        master.saveToFile(file);
        workingLabel.setText("Saved!");
        workingProgressBar.setIndeterminate(false);
        workingProgressBar.setVisible(false);
    }//GEN-LAST:event_saveAllMenuItemActionPerformed

    private void skillsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skillsMenuItemActionPerformed
        deIconify(skillsIFrame);
    }//GEN-LAST:event_skillsMenuItemActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private squidpony.editor.iframes.ConditionBlueprintIFrame conditionBlueprintsIFrame;
    public javax.swing.JDesktopPane desktop;
    private javax.swing.JMenu editMenu;
    private squidpony.editor.iframes.ElementIFrame elementsIFrame;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem saveAllMenuItem;
    private javax.swing.JMenuItem showConditionBlueprintsMenuItem;
    private javax.swing.JMenuItem showElementsMenuItem;
    private squidpony.editor.iframes.SkilIFrame skillsIFrame;
    private javax.swing.JMenuItem skillsMenuItem;
    private javax.swing.JMenu windowMenu;
    private javax.swing.JLabel workingLabel;
    private javax.swing.JProgressBar workingProgressBar;
    // End of variables declaration//GEN-END:variables
}
